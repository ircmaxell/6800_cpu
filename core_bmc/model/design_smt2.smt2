; SMT-LIBv2 description generated by Yosys 0.9 (git sha1 UNKNOWN, clang 10.0.1 -fPIC -Os)
; yosys-smt2-module core
(declare-sort |core_s| 0)
(declare-fun |core_is| (|core_s|) Bool)
; yosys-smt2-wire x$next 8
(define-fun |core_n x$next| ((state |core_s|)) (_ BitVec 8) #b00000000)
; yosys-smt2-wire x 8
(define-fun |core_n x| ((state |core_s|)) (_ BitVec 8) #b00000000)
; yosys-smt2-wire tmp8$next 8
(declare-fun |core#0| (|core_s|) (_ BitVec 8)) ; \tmp8
(declare-fun |core#1| (|core_s|) (_ BitVec 8)) ; \Din
(declare-fun |core#2| (|core_s|) (_ BitVec 2)) ; \reset_state
(define-fun |core#3| ((state |core_s|)) Bool (= (|core#2| state) #b01)) ; $procmux$119_CMP
(define-fun |core#4| ((state |core_s|)) (_ BitVec 8) (ite (|core#3| state) (|core#1| state) (|core#0| state))) ; \tmp8$next
(define-fun |core_n tmp8$next| ((state |core_s|)) (_ BitVec 8) (|core#4| state))
; yosys-smt2-register tmp8 8
; yosys-smt2-wire tmp8 8
(define-fun |core_n tmp8| ((state |core_s|)) (_ BitVec 8) (|core#0| state))
; yosys-smt2-wire tmp16$next 16
(declare-fun |core#5| (|core_s|) (_ BitVec 16)) ; \tmp16
(declare-fun |core#6| (|core_s|) (_ BitVec 4)) ; \cycle
(define-fun |core#7| ((state |core_s|)) Bool (= (|core#6| state) #b0001)) ; $102
(define-fun |core#8| ((state |core_s|)) (_ BitVec 8) (ite (|core#7| state) (|core#1| state) ((_ extract 15 8) (|core#5| state)))) ; $procmux$190_Y
(declare-fun |core#9| (|core_s|) (_ BitVec 8)) ; \instr
(define-fun |core#10| ((state |core_s|)) Bool (= (|core#9| state) #b01111110)) ; $procmux$107_CMP
(define-fun |core#11| ((state |core_s|)) (_ BitVec 8) (ite (|core#10| state) (|core#8| state) ((_ extract 15 8) (|core#5| state)))) ; $procmux$192_Y
(define-fun |core#12| ((state |core_s|)) Bool (not (or  (= ((_ extract 0 0) (|core#6| state)) #b1) (= ((_ extract 1 1) (|core#6| state)) #b1) (= ((_ extract 2 2) (|core#6| state)) #b1) (= ((_ extract 3 3) (|core#6| state)) #b1)))) ; $100
(define-fun |core#13| ((state |core_s|)) (_ BitVec 8) (ite (|core#12| state) ((_ extract 15 8) (|core#5| state)) (|core#11| state))) ; $procmux$195_Y
(define-fun |core#14| ((state |core_s|)) Bool (= (|core#2| state) #b11)) ; $110
(declare-fun |core#15| (|core_s|) (_ BitVec 1)) ; \halt_flag
(define-fun |core#16| ((state |core_s|)) (_ BitVec 1) (bvnot (|core#15| state))) ; $112
(define-fun |core#17| ((state |core_s|)) (_ BitVec 1) (bvand (ite (|core#14| state) #b1 #b0) (|core#16| state))) ; $114
(define-fun |core#18| ((state |core_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#13| state) ((_ extract 15 8) (|core#5| state)))) ; \tmp16$next [15:8]
(define-fun |core_n tmp16$next| ((state |core_s|)) (_ BitVec 16) (concat (|core#18| state) ((_ extract 7 0) (|core#5| state))))
; yosys-smt2-register tmp16 16
; yosys-smt2-wire tmp16 16
(define-fun |core_n tmp16| ((state |core_s|)) (_ BitVec 16) (|core#5| state))
; yosys-smt2-wire src8_2_select 4
(define-fun |core_n src8_2_select| ((state |core_s|)) (_ BitVec 4) #b0000)
; yosys-smt2-wire src8_1_select 4
(define-fun |core_n src8_1_select| ((state |core_s|)) (_ BitVec 4) #b0000)
; yosys-smt2-wire src16_write 6
(define-fun |core_n src16_write| ((state |core_s|)) (_ BitVec 6) #b000000)
; yosys-smt2-wire src16_select 3
(define-fun |core_n src16_select| ((state |core_s|)) (_ BitVec 3) #b000)
; yosys-smt2-wire sp$next 16
(define-fun |core_n sp$next| ((state |core_s|)) (_ BitVec 16) #b0000000000000000)
; yosys-smt2-wire sp 16
(define-fun |core_n sp| ((state |core_s|)) (_ BitVec 16) #b0000000000000000)
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
(declare-fun |core#19| (|core_s|) Bool) ; \rst
(define-fun |core_n rst| ((state |core_s|)) Bool (|core#19| state))
; yosys-smt2-wire reset_state$next 2
(define-fun |core#20| ((state |core_s|)) Bool (= (|core#2| state) #b10)) ; $procmux$118_CMP
(define-fun |core#21| ((state |core_s|)) Bool (not (or  (= ((_ extract 0 0) (|core#2| state)) #b1) (= ((_ extract 1 1) (|core#2| state)) #b1)))) ; $procmux$120_CMP
(define-fun |core#22| ((state |core_s|)) (_ BitVec 2) (ite (|core#21| state) #b01 (ite (|core#3| state) #b10 (ite (|core#20| state) #b11 (|core#2| state))))) ; $procmux$117_Y
(declare-fun |core#23| (|core_s|) (_ BitVec 1)) ; \Rst
(define-fun |core#24| ((state |core_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|core#23| state)) #b1) #b00 (|core#22| state))) ; \reset_state$next
(define-fun |core_n reset_state$next| ((state |core_s|)) (_ BitVec 2) (|core#24| state))
; yosys-smt2-register reset_state 2
; yosys-smt2-wire reset_state 2
(define-fun |core_n reset_state| ((state |core_s|)) (_ BitVec 2) (|core#2| state))
; yosys-smt2-input ph1_clk 1
; yosys-smt2-wire ph1_clk 1
; yosys-smt2-clock ph1_clk posedge
(declare-fun |core#25| (|core_s|) Bool) ; \ph1_clk
(define-fun |core_n ph1_clk| ((state |core_s|)) Bool (|core#25| state))
; yosys-smt2-wire pc$next 16
(declare-fun |core#26| (|core_s|) (_ BitVec 16)) ; \pc
(define-fun |core#27| ((state |core_s|)) (_ BitVec 16) (ite (|core#20| state) (concat (|core#0| state) (|core#1| state)) #b0000000000000000)) ; $procmux$93_Y
(define-fun |core#28| ((state |core_s|)) (_ BitVec 16) (ite (|core#7| state) (|core#26| state) (|core#27| state))) ; $procmux$102_Y
(define-fun |core#29| ((state |core_s|)) Bool (= (|core#6| state) #b0010)) ; $120
(define-fun |core#30| ((state |core_s|)) (_ BitVec 16) (ite (|core#29| state) (concat ((_ extract 15 8) (|core#5| state)) (|core#1| state)) (|core#27| state))) ; $procmux$105_Y
(define-fun |core#31| ((state |core_s|)) Bool (bvugt (|core#6| state) #b0001)) ; $104
(define-fun |core#32| ((state |core_s|)) (_ BitVec 16) (ite (|core#31| state) (|core#27| state) (|core#26| state))) ; $procmux$109_Y
(define-fun |core#33| ((state |core_s|)) Bool (= (|core#9| state) #b11000110)) ; $procmux$101_CMP
(define-fun |core#34| ((state |core_s|)) Bool (= (|core#9| state) #b10000110)) ; $procmux$104_CMP
(define-fun |core#35| ((state |core_s|)) Bool (= (|core#9| state) #b00011011)) ; $procmux$29_CMP
(define-fun |core#36| ((state |core_s|)) Bool (or  (|core#33| state) (|core#34| state) (|core#35| state))) ; $auto$opt_reduce.cc:132:opt_mux$381
(define-fun |core#37| ((state |core_s|)) Bool (= (|core#9| state) #b00000001)) ; $procmux$111_CMP
(define-fun |core#38| ((state |core_s|)) (_ BitVec 16) (ite (|core#37| state) (|core#32| state) (ite (|core#10| state) (|core#30| state) (ite (|core#36| state) (|core#28| state) (|core#27| state))))) ; $procmux$113_Y
(define-fun |core#39| ((state |core_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#38| state) (|core#27| state))) ; \end_instr_addr
(define-fun |core#40| ((state |core_s|)) (_ BitVec 1) (ite (|core#20| state) #b1 #b0)) ; $procmux$69_Y
(define-fun |core#41| ((state |core_s|)) (_ BitVec 1) (ite (|core#7| state) #b1 (|core#40| state))) ; $procmux$71_Y
(define-fun |core#42| ((state |core_s|)) (_ BitVec 1) (ite (|core#29| state) #b1 (|core#40| state))) ; $procmux$81_Y
(define-fun |core#43| ((state |core_s|)) (_ BitVec 1) (ite (|core#31| state) (|core#40| state) #b1)) ; $procmux$85_Y
(define-fun |core#44| ((state |core_s|)) (_ BitVec 1) (ite (|core#37| state) (|core#43| state) (ite (|core#10| state) (|core#42| state) (ite (|core#36| state) (|core#41| state) (|core#40| state))))) ; $procmux$73_Y
(define-fun |core#45| ((state |core_s|)) (_ BitVec 1) (ite (|core#12| state) (|core#40| state) (|core#44| state))) ; $procmux$89_Y
(define-fun |core#46| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#45| state) (|core#40| state))) ; \end_instr_flag
(define-fun |core#47| ((state |core_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|core#46| state)) #b1) ((_ extract 7 0) (|core#39| state)) ((_ extract 7 0) (|core#26| state)))) ; $procmux$242_Y
(define-fun |core#48| ((state |core_s|)) (_ BitVec 16) (bvadd (|core#26| state) #b0000000000000001)) ; $38
(define-fun |core#49| ((state |core_s|)) (_ BitVec 8) (ite (|core#7| state) ((_ extract 7 0) (|core#48| state)) (|core#47| state))) ; $procmux$244_Y
(define-fun |core#50| ((state |core_s|)) (_ BitVec 8) (ite (|core#31| state) (|core#47| state) ((_ extract 7 0) (|core#48| state)))) ; $procmux$252_Y
(define-fun |core#51| ((state |core_s|)) Bool (or  (|core#10| state) (|core#33| state) (|core#34| state))) ; $auto$opt_reduce.cc:132:opt_mux$373
(define-fun |core#52| ((state |core_s|)) Bool (= (|core#9| state) #b11011101)) ; $procmux$138_CMP
(define-fun |core#53| ((state |core_s|)) (_ BitVec 8) (ite (|core#52| state) (|core#50| state) (ite (|core#51| state) (|core#49| state) (|core#47| state)))) ; $procmux$246_Y
(define-fun |core#54| ((state |core_s|)) (_ BitVec 8) (ite (|core#12| state) ((_ extract 7 0) (|core#48| state)) (|core#53| state))) ; $procmux$259_Y
(define-fun |core#55| ((state |core_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#54| state) (|core#47| state))) ; \pc$next [7:0]
(define-fun |core#56| ((state |core_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|core#46| state)) #b1) ((_ extract 15 8) (|core#39| state)) ((_ extract 15 8) (|core#26| state)))) ; $procmux$215_Y
(define-fun |core#57| ((state |core_s|)) (_ BitVec 8) (ite (|core#7| state) ((_ extract 15 8) (|core#48| state)) (|core#56| state))) ; $procmux$217_Y
(define-fun |core#58| ((state |core_s|)) (_ BitVec 8) (ite (|core#31| state) (|core#56| state) ((_ extract 15 8) (|core#48| state)))) ; $procmux$225_Y
(define-fun |core#59| ((state |core_s|)) (_ BitVec 8) (ite (|core#52| state) (|core#58| state) (ite (|core#51| state) (|core#57| state) (|core#56| state)))) ; $procmux$219_Y
(define-fun |core#60| ((state |core_s|)) (_ BitVec 8) (ite (|core#12| state) ((_ extract 15 8) (|core#48| state)) (|core#59| state))) ; $procmux$232_Y
(define-fun |core#61| ((state |core_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#60| state) (|core#56| state))) ; \pc$next [15:8]
(define-fun |core_n pc$next| ((state |core_s|)) (_ BitVec 16) (concat (|core#61| state) (|core#55| state)))
; yosys-smt2-register pc 16
; yosys-smt2-wire pc 16
(define-fun |core_n pc| ((state |core_s|)) (_ BitVec 16) (|core#26| state))
; yosys-smt2-wire instr$next 8
(define-fun |core#62| ((state |core_s|)) (_ BitVec 8) (ite (|core#12| state) (|core#1| state) (|core#9| state))) ; $procmux$52_Y
(define-fun |core#63| ((state |core_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#62| state) (|core#9| state))) ; \instr$next
(define-fun |core_n instr$next| ((state |core_s|)) (_ BitVec 8) (|core#63| state))
; yosys-smt2-register instr 8
; yosys-smt2-wire instr 8
(define-fun |core_n instr| ((state |core_s|)) (_ BitVec 8) (|core#9| state))
; yosys-smt2-wire incdec16_write 6
(define-fun |core_n incdec16_write| ((state |core_s|)) (_ BitVec 6) #b000000)
; yosys-smt2-wire incdec16 16
(define-fun |core_n incdec16| ((state |core_s|)) (_ BitVec 16) #b0000000000000000)
; yosys-smt2-wire halt_flag$next 1
(define-fun |core#64| ((state |core_s|)) (_ BitVec 1) (ite (|core#31| state) #b1 (|core#15| state))) ; $procmux$26_Y
(define-fun |core#65| ((state |core_s|)) Bool (bvugt (|core#6| state) #b0010)) ; $174
(define-fun |core#66| ((state |core_s|)) (_ BitVec 1) (ite (|core#65| state) #b1 (|core#15| state))) ; $procmux$39_Y
(define-fun |core#67| ((state |core_s|)) Bool (or  (|core#52| state) (|core#37| state) (|core#33| state) (|core#34| state) (|core#35| state))) ; $auto$opt_reduce.cc:132:opt_mux$379
(define-fun |core#68| ((state |core_s|)) (_ BitVec 1) (ite (|core#10| state) (|core#66| state) (ite (|core#67| state) (|core#64| state) #b1))) ; $procmux$28_Y
(define-fun |core#69| ((state |core_s|)) (_ BitVec 1) (ite (|core#12| state) (|core#15| state) (|core#68| state))) ; $procmux$46_Y
(define-fun |core#70| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#69| state) (|core#15| state))) ; $procmux$48_Y
(define-fun |core#71| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#23| state)) #b1) #b0 (|core#70| state))) ; \halt_flag$next
(define-fun |core_n halt_flag$next| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#71| state)) #b1))
; yosys-smt2-register halt_flag 1
; yosys-smt2-wire halt_flag 1
(define-fun |core_n halt_flag| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#15| state)) #b1))
; yosys-smt2-wire end_instr_flag 1
(define-fun |core_n end_instr_flag| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#46| state)) #b1))
; yosys-smt2-wire end_instr_addr 16
(define-fun |core_n end_instr_addr| ((state |core_s|)) (_ BitVec 16) (|core#39| state))
; yosys-smt2-wire cycle$next 4
(define-fun |core#72| ((state |core_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|core#46| state)) #b1) #b0000 (|core#6| state))) ; $procmux$56_Y
(define-fun |core#73| ((state |core_s|)) (_ BitVec 4) (ite (|core#7| state) #b0010 (|core#72| state))) ; $procmux$58_Y
(define-fun |core#74| ((state |core_s|)) (_ BitVec 4) (ite (|core#10| state) (|core#73| state) (|core#72| state))) ; $procmux$60_Y
(define-fun |core#75| ((state |core_s|)) (_ BitVec 4) (ite (|core#12| state) #b0001 (|core#74| state))) ; $procmux$63_Y
(define-fun |core#76| ((state |core_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#75| state) (|core#72| state))) ; $procmux$65_Y
(define-fun |core#77| ((state |core_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|core#23| state)) #b1) #b0000 (|core#76| state))) ; \cycle$next
(define-fun |core_n cycle$next| ((state |core_s|)) (_ BitVec 4) (|core#77| state))
; yosys-smt2-register cycle 4
; yosys-smt2-wire cycle 4
(define-fun |core_n cycle| ((state |core_s|)) (_ BitVec 4) (|core#6| state))
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(declare-fun |core#78| (|core_s|) Bool) ; \clk
(define-fun |core_n clk| ((state |core_s|)) Bool (|core#78| state))
; yosys-smt2-wire b 8
(define-fun |core_n b| ((state |core_s|)) (_ BitVec 8) #b00000000)
; yosys-smt2-wire alu8_write 14
(define-fun |core_n alu8_write| ((state |core_s|)) (_ BitVec 14) #b00000000000000)
; yosys-smt2-wire alu8 8
(define-fun |core_n alu8| ((state |core_s|)) (_ BitVec 8) #b00000000)
; yosys-smt2-wire a 8
(define-fun |core_n a| ((state |core_s|)) (_ BitVec 8) #b00000000)
; yosys-smt2-input Rst 1
; yosys-smt2-wire Rst 1
(define-fun |core_n Rst| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#23| state)) #b1))
; yosys-smt2-wire RW$next 1
(declare-fun |core#79| (|core_s|) (_ BitVec 1)) ; \RW
(define-fun |core#80| ((state |core_s|)) Bool (or  (|core#21| state) (|core#3| state))) ; $auto$opt_reduce.cc:132:opt_mux$371
(define-fun |core#81| ((state |core_s|)) (_ BitVec 1) (ite (|core#80| state) #b1 (|core#79| state))) ; $procmux$123_Y
(define-fun |core#82| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#46| state)) #b1) #b1 (|core#81| state))) ; $procmux$126_Y
(define-fun |core#83| ((state |core_s|)) (_ BitVec 1) (ite (|core#7| state) #b1 (|core#82| state))) ; $procmux$128_Y
(define-fun |core#84| ((state |core_s|)) (_ BitVec 1) (ite (|core#31| state) (|core#82| state) #b1)) ; $procmux$136_Y
(define-fun |core#85| ((state |core_s|)) (_ BitVec 1) (ite (|core#52| state) (|core#84| state) (ite (|core#51| state) (|core#83| state) (|core#82| state)))) ; $procmux$130_Y
(define-fun |core#86| ((state |core_s|)) (_ BitVec 1) (ite (|core#12| state) #b1 (|core#85| state))) ; $procmux$143_Y
(define-fun |core#87| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#86| state) (|core#82| state))) ; $procmux$145_Y
(define-fun |core#88| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#23| state)) #b1) #b1 (|core#87| state))) ; \RW$next
(define-fun |core_n RW$next| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#88| state)) #b1))
; yosys-smt2-output RW 1
; yosys-smt2-register RW 1
; yosys-smt2-wire RW 1
(define-fun |core_n RW| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#79| state)) #b1))
; yosys-smt2-output Dout 8
; yosys-smt2-wire Dout 8
(define-fun |core_n Dout| ((state |core_s|)) (_ BitVec 8) #b00000000)
; yosys-smt2-input Din 8
; yosys-smt2-wire Din 8
(define-fun |core_n Din| ((state |core_s|)) (_ BitVec 8) (|core#1| state))
; yosys-smt2-wire Addr$next 16
(declare-fun |core#89| (|core_s|) (_ BitVec 16)) ; \Addr
(define-fun |core#90| ((state |core_s|)) (_ BitVec 16) (ite (|core#21| state) #b1111111111111110 (ite (|core#3| state) #b1111111111111111 (|core#89| state)))) ; $procmux$153_Y
(define-fun |core#91| ((state |core_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|core#46| state)) #b1) (|core#39| state) (|core#90| state))) ; $procmux$156_Y
(define-fun |core#92| ((state |core_s|)) (_ BitVec 16) (ite (|core#31| state) (|core#91| state) (|core#48| state))) ; $procmux$159_Y
(define-fun |core#93| ((state |core_s|)) (_ BitVec 16) (ite (|core#7| state) (|core#48| state) (|core#91| state))) ; $procmux$163_Y
(define-fun |core#94| ((state |core_s|)) (_ BitVec 16) (ite (|core#10| state) (|core#93| state) (ite (|core#52| state) (|core#92| state) (|core#91| state)))) ; $procmux$161_Y
(define-fun |core#95| ((state |core_s|)) (_ BitVec 16) (ite (|core#12| state) (|core#48| state) (|core#94| state))) ; $procmux$167_Y
(define-fun |core#96| ((state |core_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|core#17| state)) #b1) (|core#95| state) (|core#91| state))) ; $procmux$169_Y
(define-fun |core#97| ((state |core_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|core#23| state)) #b1) #b0000000000000000 (|core#96| state))) ; \Addr$next
(define-fun |core_n Addr$next| ((state |core_s|)) (_ BitVec 16) (|core#97| state))
; yosys-smt2-output Addr 16
; yosys-smt2-register Addr 16
; yosys-smt2-wire Addr 16
(define-fun |core_n Addr| ((state |core_s|)) (_ BitVec 16) (|core#89| state))
; yosys-smt2-register $sample$s$Rst$sync$4 1
(declare-fun |core#98| (|core_s|) (_ BitVec 1)) ; $sample$s$Rst$sync$4
(define-fun |core_n $sample$s$Rst$sync$4| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#98| state)) #b1))
; yosys-smt2-register $sample$s$Rst$sync$3 1
(declare-fun |core#99| (|core_s|) (_ BitVec 1)) ; $sample$s$Rst$sync$3
(define-fun |core_n $sample$s$Rst$sync$3| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#99| state)) #b1))
; yosys-smt2-register $sample$s$Rst$sync$2 1
(declare-fun |core#100| (|core_s|) (_ BitVec 1)) ; $sample$s$Rst$sync$2
(define-fun |core_n $sample$s$Rst$sync$2| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#100| state)) #b1))
; yosys-smt2-register $sample$s$Rst$sync$1 1
(declare-fun |core#101| (|core_s|) (_ BitVec 1)) ; $sample$s$Rst$sync$1
(define-fun |core_n $sample$s$Rst$sync$1| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#101| state)) #b1))
; yosys-smt2-register $sample$s$Din$ph1$2 8
(declare-fun |core#102| (|core_s|) (_ BitVec 8)) ; $sample$s$Din$ph1$2
(define-fun |core_n $sample$s$Din$ph1$2| ((state |core_s|)) (_ BitVec 8) (|core#102| state))
; yosys-smt2-register $sample$s$Din$ph1$1 8
(declare-fun |core#103| (|core_s|) (_ BitVec 8)) ; $sample$s$Din$ph1$1
(define-fun |core_n $sample$s$Din$ph1$1| ((state |core_s|)) (_ BitVec 8) (|core#103| state))
; yosys-smt2-register $sample$s$Addr$ph1$2 16
(declare-fun |core#104| (|core_s|) (_ BitVec 16)) ; $sample$s$Addr$ph1$2
(define-fun |core_n $sample$s$Addr$ph1$2| ((state |core_s|)) (_ BitVec 16) (|core#104| state))
; yosys-smt2-register $sample$s$Addr$ph1$1 16
(declare-fun |core#105| (|core_s|) (_ BitVec 16)) ; $sample$s$Addr$ph1$1
(define-fun |core_n $sample$s$Addr$ph1$1| ((state |core_s|)) (_ BitVec 16) (|core#105| state))
; yosys-smt2-register $assert$en$287 1
(declare-fun |core#106| (|core_s|) (_ BitVec 1)) ; $assert$en$287
(define-fun |core_n $assert$en$287| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#106| state)) #b1))
; yosys-smt2-register $assert$en$266 1
(declare-fun |core#107| (|core_s|) (_ BitVec 1)) ; $assert$en$266
(define-fun |core_n $assert$en$266| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#107| state)) #b1))
; yosys-smt2-register $assert$en$245 1
(declare-fun |core#108| (|core_s|) (_ BitVec 1)) ; $assert$en$245
(define-fun |core_n $assert$en$245| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#108| state)) #b1))
; yosys-smt2-register $assert$en$224 1
(declare-fun |core#109| (|core_s|) (_ BitVec 1)) ; $assert$en$224
(define-fun |core_n $assert$en$224| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#109| state)) #b1))
; yosys-smt2-register $assert$en$203 1
(declare-fun |core#110| (|core_s|) (_ BitVec 1)) ; $assert$en$203
(define-fun |core_n $assert$en$203| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#110| state)) #b1))
; yosys-smt2-register $assert$en 1
(declare-fun |core#111| (|core_s|) (_ BitVec 1)) ; $assert$en
(define-fun |core_n $assert$en| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#111| state)) #b1))
; yosys-smt2-register $assert$check$288 1
(declare-fun |core#112| (|core_s|) (_ BitVec 1)) ; $assert$check$288
(define-fun |core_n $assert$check$288| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#112| state)) #b1))
; yosys-smt2-register $assert$check$267 1
(declare-fun |core#113| (|core_s|) (_ BitVec 1)) ; $assert$check$267
(define-fun |core_n $assert$check$267| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#113| state)) #b1))
; yosys-smt2-register $assert$check$246 1
(declare-fun |core#114| (|core_s|) (_ BitVec 1)) ; $assert$check$246
(define-fun |core_n $assert$check$246| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#114| state)) #b1))
; yosys-smt2-register $assert$check$225 1
(declare-fun |core#115| (|core_s|) (_ BitVec 1)) ; $assert$check$225
(define-fun |core_n $assert$check$225| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#115| state)) #b1))
; yosys-smt2-register $assert$check$204 1
(declare-fun |core#116| (|core_s|) (_ BitVec 1)) ; $assert$check$204
(define-fun |core_n $assert$check$204| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#116| state)) #b1))
; yosys-smt2-register $assert$check 1
(declare-fun |core#117| (|core_s|) (_ BitVec 1)) ; $assert$check
(define-fun |core_n $assert$check| ((state |core_s|)) Bool (= ((_ extract 0 0) (|core#117| state)) #b1))
; yosys-smt2-assert 0 /Users/ferrara/personal/6800_cpu/Validators/_base.py:47
(define-fun |core_a 0| ((state |core_s|)) Bool (or (= ((_ extract 0 0) (|core#112| state)) #b1) (not (= ((_ extract 0 0) (|core#106| state)) #b1)))) ; $307
; yosys-smt2-assert 1 /Users/ferrara/personal/6800_cpu/Validators/_base.py:46
(define-fun |core_a 1| ((state |core_s|)) Bool (or (= ((_ extract 0 0) (|core#113| state)) #b1) (not (= ((_ extract 0 0) (|core#107| state)) #b1)))) ; $286
; yosys-smt2-assert 2 /Users/ferrara/personal/6800_cpu/Validators/_base.py:53
(define-fun |core_a 2| ((state |core_s|)) Bool (or (= ((_ extract 0 0) (|core#114| state)) #b1) (not (= ((_ extract 0 0) (|core#108| state)) #b1)))) ; $265
; yosys-smt2-assert 3 /Users/ferrara/personal/6800_cpu/Validators/_base.py:53
(define-fun |core_a 3| ((state |core_s|)) Bool (or (= ((_ extract 0 0) (|core#115| state)) #b1) (not (= ((_ extract 0 0) (|core#109| state)) #b1)))) ; $244
; yosys-smt2-assert 4 /Users/ferrara/personal/6800_cpu/Validators/_base.py:53
(define-fun |core_a 4| ((state |core_s|)) Bool (or (= ((_ extract 0 0) (|core#116| state)) #b1) (not (= ((_ extract 0 0) (|core#110| state)) #b1)))) ; $223
; yosys-smt2-assert 5 /Users/ferrara/personal/6800_cpu/Validators/_base.py:53
(define-fun |core_a 5| ((state |core_s|)) Bool (or (= ((_ extract 0 0) (|core#117| state)) #b1) (not (= ((_ extract 0 0) (|core#111| state)) #b1)))) ; $202
(define-fun |core#118| ((state |core_s|)) Bool (= (|core#105| state) #b1111111111111111)) ; $200
(define-fun |core#119| ((state |core_s|)) (_ BitVec 1) (bvnot (|core#23| state))) ; $184
(define-fun |core#120| ((state |core_s|)) (_ BitVec 1) (bvand (|core#98| state) (|core#119| state))) ; $186
(define-fun |core#121| ((state |core_s|)) (_ BitVec 1) (bvnot (|core#101| state))) ; $188
(define-fun |core#122| ((state |core_s|)) (_ BitVec 1) (bvand (|core#120| state) (|core#121| state))) ; $190
(define-fun |core#123| ((state |core_s|)) (_ BitVec 1) (bvnot (|core#100| state))) ; $192
(define-fun |core#124| ((state |core_s|)) (_ BitVec 1) (bvand (|core#122| state) (|core#123| state))) ; $194
(define-fun |core#125| ((state |core_s|)) (_ BitVec 1) (bvnot (|core#99| state))) ; $196
(define-fun |core#126| ((state |core_s|)) (_ BitVec 1) (bvand (|core#124| state) (|core#125| state))) ; $198
(define-fun |core#127| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) (ite (|core#118| state) #b1 #b0) (|core#117| state))) ; $assert$check$next
(define-fun |core#128| ((state |core_s|)) Bool (= (|core#104| state) #b1111111111111110)) ; $221
(define-fun |core#129| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) (ite (|core#128| state) #b1 #b0) (|core#116| state))) ; $assert$check$204$next
(define-fun |core#130| ((state |core_s|)) Bool (= (|core#103| state) ((_ extract 7 0) (|core#89| state)))) ; $242
(define-fun |core#131| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) (ite (|core#130| state) #b1 #b0) (|core#115| state))) ; $assert$check$225$next
(define-fun |core#132| ((state |core_s|)) Bool (= (|core#102| state) ((_ extract 15 8) (|core#89| state)))) ; $263
(define-fun |core#133| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) (ite (|core#132| state) #b1 #b0) (|core#114| state))) ; $assert$check$246$next
(define-fun |core#134| ((state |core_s|)) Bool (= (|core#26| state) (|core#89| state))) ; $284
(define-fun |core#135| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) (ite (|core#134| state) #b1 #b0) (|core#113| state))) ; $assert$check$267$next
(define-fun |core#136| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) (ite (|core#12| state) #b1 #b0) (|core#112| state))) ; $assert$check$288$next
(define-fun |core#137| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) #b1 (|core#111| state))) ; $assert$en$next
(define-fun |core#138| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) #b1 (|core#110| state))) ; $assert$en$203$next
(define-fun |core#139| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) #b1 (|core#109| state))) ; $assert$en$224$next
(define-fun |core#140| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) #b1 (|core#108| state))) ; $assert$en$245$next
(define-fun |core#141| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) #b1 (|core#107| state))) ; $assert$en$266$next
(define-fun |core#142| ((state |core_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|core#126| state)) #b1) #b1 (|core#106| state))) ; $assert$en$287$next
(define-fun |core_a| ((state |core_s|)) Bool (and
  (|core_a 0| state)
  (|core_a 1| state)
  (|core_a 2| state)
  (|core_a 3| state)
  (|core_a 4| state)
  (|core_a 5| state)
))
(define-fun |core_u| ((state |core_s|)) Bool true)
(define-fun |core_i| ((state |core_s|)) Bool (and
  (= (|core#0| state) #b00000000) ; tmp8
  (= (|core#5| state) #b0000000000000000) ; tmp16
  (= (|core#2| state) #b00) ; reset_state
  (= (|core#26| state) #b0000000000000000) ; pc
  (= (|core#9| state) #b00000000) ; instr
  (= (= ((_ extract 0 0) (|core#15| state)) #b1) false) ; halt_flag
  (= (|core#6| state) #b0000) ; cycle
  (= (= ((_ extract 0 0) (|core#79| state)) #b1) true) ; RW
  (= (|core#89| state) #b0000000000000000) ; Addr
  (= (= ((_ extract 0 0) (|core#98| state)) #b1) false) ; $sample$s$Rst$sync$4
  (= (= ((_ extract 0 0) (|core#99| state)) #b1) false) ; $sample$s$Rst$sync$3
  (= (= ((_ extract 0 0) (|core#100| state)) #b1) false) ; $sample$s$Rst$sync$2
  (= (= ((_ extract 0 0) (|core#101| state)) #b1) false) ; $sample$s$Rst$sync$1
  (= (|core#102| state) #b00000000) ; $sample$s$Din$ph1$2
  (= (|core#103| state) #b00000000) ; $sample$s$Din$ph1$1
  (= (|core#104| state) #b0000000000000000) ; $sample$s$Addr$ph1$2
  (= (|core#105| state) #b0000000000000000) ; $sample$s$Addr$ph1$1
  (= (= ((_ extract 0 0) (|core#106| state)) #b1) false) ; $assert$en$287
  (= (= ((_ extract 0 0) (|core#107| state)) #b1) false) ; $assert$en$266
  (= (= ((_ extract 0 0) (|core#108| state)) #b1) false) ; $assert$en$245
  (= (= ((_ extract 0 0) (|core#109| state)) #b1) false) ; $assert$en$224
  (= (= ((_ extract 0 0) (|core#110| state)) #b1) false) ; $assert$en$203
  (= (= ((_ extract 0 0) (|core#111| state)) #b1) false) ; $assert$en
  (= (= ((_ extract 0 0) (|core#112| state)) #b1) false) ; $assert$check$288
  (= (= ((_ extract 0 0) (|core#113| state)) #b1) false) ; $assert$check$267
  (= (= ((_ extract 0 0) (|core#114| state)) #b1) false) ; $assert$check$246
  (= (= ((_ extract 0 0) (|core#115| state)) #b1) false) ; $assert$check$225
  (= (= ((_ extract 0 0) (|core#116| state)) #b1) false) ; $assert$check$204
  (= (= ((_ extract 0 0) (|core#117| state)) #b1) false) ; $assert$check
))
(define-fun |core_h| ((state |core_s|)) Bool true)
(define-fun |core_t| ((state |core_s|) (next_state |core_s|)) Bool (and
  (= (|core#127| state) (|core#117| next_state)) ; $procdff$355 $assert$check
  (= (|core#129| state) (|core#116| next_state)) ; $procdff$353 $assert$check$204
  (= (|core#131| state) (|core#115| next_state)) ; $procdff$351 $assert$check$225
  (= (|core#133| state) (|core#114| next_state)) ; $procdff$349 $assert$check$246
  (= (|core#135| state) (|core#113| next_state)) ; $procdff$347 $assert$check$267
  (= (|core#136| state) (|core#112| next_state)) ; $procdff$345 $assert$check$288
  (= (|core#137| state) (|core#111| next_state)) ; $procdff$354 $assert$en
  (= (|core#138| state) (|core#110| next_state)) ; $procdff$352 $assert$en$203
  (= (|core#139| state) (|core#109| next_state)) ; $procdff$350 $assert$en$224
  (= (|core#140| state) (|core#108| next_state)) ; $procdff$348 $assert$en$245
  (= (|core#141| state) (|core#107| next_state)) ; $procdff$346 $assert$en$266
  (= (|core#142| state) (|core#106| next_state)) ; $procdff$344 $assert$en$287
  (= (|core#89| state) (|core#105| next_state)) ; $procdff$343 $sample$s$Addr$ph1$1
  (= (|core#105| state) (|core#104| next_state)) ; $procdff$342 $sample$s$Addr$ph1$2
  (= (|core#1| state) (|core#103| next_state)) ; $procdff$341 $sample$s$Din$ph1$1
  (= (|core#103| state) (|core#102| next_state)) ; $procdff$340 $sample$s$Din$ph1$2
  (= (|core#23| state) (|core#101| next_state)) ; $procdff$339 $sample$s$Rst$sync$1
  (= (|core#101| state) (|core#100| next_state)) ; $procdff$338 $sample$s$Rst$sync$2
  (= (|core#100| state) (|core#99| next_state)) ; $procdff$337 $sample$s$Rst$sync$3
  (= (|core#99| state) (|core#98| next_state)) ; $procdff$336 $sample$s$Rst$sync$4
  (= (|core#97| state) (|core#89| next_state)) ; $procdff$361 \Addr
  (= (|core#88| state) (|core#79| next_state)) ; $procdff$360 \RW
  (= (concat (|core#61| state) (|core#55| state)) (|core#26| next_state)) ; $procdff$365 \pc
  (= (|core#71| state) (|core#15| next_state)) ; $procdff$356 \halt_flag
  (= (|core#63| state) (|core#9| next_state)) ; $procdff$357 \instr
  (= (|core#77| state) (|core#6| next_state)) ; $procdff$358 \cycle
  (= (concat (|core#18| state) ((_ extract 7 0) (|core#5| state))) (|core#5| next_state)) ; $procdff$363 \tmp16
  (= (|core#24| state) (|core#2| next_state)) ; $procdff$359 \reset_state
  (= (|core#4| state) (|core#0| next_state)) ; $procdff$364 \tmp8
)) ; end of module core
; yosys-smt2-module top
(declare-sort |top_s| 0)
(declare-fun |top_is| (|top_s|) Bool)
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
(declare-fun |top#0| (|top_s|) Bool) ; \rst
(define-fun |top_n rst| ((state |top_s|)) Bool (|top#0| state))
; yosys-smt2-input ph1_clk 1
; yosys-smt2-wire ph1_clk 1
; yosys-smt2-clock ph1_clk posedge
(declare-fun |top#1| (|top_s|) Bool) ; \ph1_clk
(define-fun |top_n ph1_clk| ((state |top_s|)) Bool (|top#1| state))
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(declare-fun |top#2| (|top_s|) Bool) ; \clk
(define-fun |top_n clk| ((state |top_s|)) Bool (|top#2| state))
; yosys-smt2-input Rst 1
; yosys-smt2-wire Rst 1
(declare-fun |top#3| (|top_s|) Bool) ; \Rst
(define-fun |top_n Rst| ((state |top_s|)) Bool (|top#3| state))
; yosys-smt2-output RW 1
; yosys-smt2-wire RW 1
; yosys-smt2-cell core core
(declare-fun |top#4| (|top_s|) Bool) ; \RW
(declare-fun |top#5| (|top_s|) (_ BitVec 8)) ; \Dout
(declare-fun |top#6| (|top_s|) (_ BitVec 16)) ; \Addr
(declare-fun |top_h core| (|top_s|) |core_s|)
(define-fun |top_n RW| ((state |top_s|)) Bool (|top#4| state))
; yosys-smt2-output Dout 8
; yosys-smt2-wire Dout 8
(define-fun |top_n Dout| ((state |top_s|)) (_ BitVec 8) (|top#5| state))
; yosys-smt2-input Din 8
; yosys-smt2-wire Din 8
(declare-fun |top#7| (|top_s|) (_ BitVec 8)) ; \Din
(define-fun |top_n Din| ((state |top_s|)) (_ BitVec 8) (|top#7| state))
; yosys-smt2-output Addr 16
; yosys-smt2-wire Addr 16
(define-fun |top_n Addr| ((state |top_s|)) (_ BitVec 16) (|top#6| state))
(define-fun |top_a| ((state |top_s|)) Bool 
  (|core_a| (|top_h core| state))
)
(define-fun |top_u| ((state |top_s|)) Bool 
  (|core_u| (|top_h core| state))
)
(define-fun |top_i| ((state |top_s|)) Bool 
  (|core_i| (|top_h core| state))
)
(define-fun |top_h| ((state |top_s|)) Bool (and
  (= (|top_is| state) (|core_is| (|top_h core| state)))
  (= (|top#0| state) (|core_n rst| (|top_h core| state))) ; core.rst
  (= (|top#1| state) (|core_n ph1_clk| (|top_h core| state))) ; core.ph1_clk
  (= (|top#2| state) (|core_n clk| (|top_h core| state))) ; core.clk
  (= (|top#3| state) (|core_n Rst| (|top_h core| state))) ; core.Rst
  (= (|top#4| state) (|core_n RW| (|top_h core| state))) ; core.RW
  (= (|top#5| state) (|core_n Dout| (|top_h core| state))) ; core.Dout
  (= (|top#7| state) (|core_n Din| (|top_h core| state))) ; core.Din
  (= (|top#6| state) (|core_n Addr| (|top_h core| state))) ; core.Addr
  (|core_h| (|top_h core| state))
))
(define-fun |top_t| ((state |top_s|) (next_state |top_s|)) Bool 
  (|core_t| (|top_h core| state) (|top_h core| next_state))
) ; end of module top
; yosys-smt2-topmod top
; end of yosys output
